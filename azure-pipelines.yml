trigger:
  - master

jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: GoTool@0
        inputs:
          version: '1.12'
        #goPath: # Optional
        #goBin: # Optional

#      - task: Go@0
#        inputs:
#          command: 'build'
#          #customCommand: # Required when command == Custom
#          arguments: '-o $(Build.ArtifactStagingDirectory)/azcopy_linux'
#          workingDirectory:
      - script: |
          GOARCH=amd64 GOOS=linux go build -o "$(Build.ArtifactStagingDirectory)/azcopy_linux_amd64"
          GOARCH=amd64 GOOS=linux go build -tags "se_integration" -o "$(Build.ArtifactStagingDirectory)/azcopy_linux_se_amd64"
          GOARCH=amd64 GOOS=windows go build -o "$(Build.ArtifactStagingDirectory)/azcopy_windows_amd64.exe"
          GOARCH=386 GOOS=windows go build -o "$(Build.ArtifactStagingDirectory)/azcopy_windows_386.exe"
        displayName: 'Generate builds'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        condition: succeededOrFailed()

#  - job: MacOS Build
#    pool:
#      vmImage: 'xcode9-macos10.13'
#    steps:
#      - bash: ./build.sh
#        env:
#          COREHOST_TRACE: 0
#          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
#          DOTNET_CLI_TELEMETRY_OPTOUT: 1
#
#  - job: Windows Build
#    pool:
#      vmImage: 'vs2017-win2016'
#    steps:
#      - powershell: .\build.ps1
#        env:
#          COREHOST_TRACE: 0
#          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
#          DOTNET_CLI_TELEMETRY_OPTOUT: 1